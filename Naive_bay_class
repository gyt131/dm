import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import CategoricalNB
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score, classification_report
data = {
    'outlook': ['sunny', 'sunny', 'overcast', 'rainy', 'rainy', 'rainy', 'overcast', 'sunny'],
    'temperature': ['hot', 'hot', 'hot', 'mild', 'cool', 'cool', 'cool', 'mild'],
    'humidity': ['high', 'high', 'high', 'high', 'normal', 'normal', 'normal', 'high'],
    'windy': ['false', 'true', 'false', 'false', 'false', 'true', 'true', 'false'],
    'playtennis': ['no', 'no', 'yes', 'yes', 'yes', 'no', 'yes', 'no']
}

df = pd.DataFrame(data)
print("Dataset:\n", df)
X = df.drop("playtennis", axis=1)
y = df["playtennis"]
encoders = {}
for column in X.columns:
    le = LabelEncoder()
    X[column] = le.fit_transform(X[column])
    encoders[column] = le

label_encoder = LabelEncoder()
y = label_encoder.fit_transform(y)  # Yes/No â†’ 1/0
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
model = CategoricalNB()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
print("\nTest Data:\n", X_test)
print("Predictions:", label_encoder.inverse_transform(y_pred))
print("Actual Labels:", label_encoder.inverse_transform(y_test))
print("\nAccuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred, target_names=label_encoder.classes_))
